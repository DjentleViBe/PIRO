name: Update README with PR info

on:
  push:
    branches:
      - main   # Trigger when there's a push to the main branch
      - LU_decomp_HTLF
  schedule:
    - cron: "0 0 * * *" # Optional: Run the workflow daily at midnight

jobs:
 update-readme:
  runs-on: ubuntu-latest

  steps:
  - name: Checkout repository
    uses: actions/checkout@v2
  - name: Install LibreSans font
    run: |
          sudo apt-get update
          sudo apt-get install -y fonts-liberation
  - name: Set up Python
    uses: actions/setup-python@v2
    with:
        python-version: '3.8'
  - name: Install dependencies
    run: |
          python -m pip install --upgrade pip
          pip install -r .github/workflows/requirements.txt
  - name: Set Git user identity
    run: |
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "${GITHUB_ACTOR}"

  - name: Get the latest Pull Request Number and update PR
    id: pr_number
    run: |
      PR_RESPONSE=$(curl -H "Authorization: token ${{ secrets.FINE_GRAINED_TOKEN }}" \
      "https://api.github.com/repos/${{ github.repository }}/pulls?state=open")
      echo "PR Response: $PR_RESPONSE"  # Debugging line
      ISSUE_RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.FINE_GRAINED_TOKEN }}" \
      "https://api.github.com/repos/${{ github.repository }}/issues?state=open&filter=all")
      echo "Open issues: $ISSUE_COUNT"

      RELEASE_RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.FINE_GRAINED_TOKEN }}" \
      "https://api.github.com/repos/${{ github.repository }}/releases/latest")

      RELEASE_TAG=$(echo "$RELEASE_RESPONSE" | jq -r '.tag_name')
      echo "Latest release tag: $RELEASE_TAG"

      PR_COUNT=$(echo "$PR_RESPONSE" | jq length)

      if [ "$PR_COUNT" -gt 0 ]; then
        PR_NUMBER=$(echo "$PR_RESPONSE" | jq '.[0].number')
        echo "::set-output name=pr_number::$PR_NUMBER"
      else
        PR_NUMBER="None"
      fi

      if [ "$RELEASE_TAG" == "null" ]; then
        RELEASE_TAG="0.0"
      fi

      python .github/workflows/genimage.py "$PR_NUMBER Open" "$ISSUE_COUNT Issues" "$RELEASE_TAG Issues" || {
        echo "Python script failed"
        exit 1
      }

      # Check for changes in image files
      git diff --exit-code pics/*.png
      if [ $? -eq 0 ]; then
        echo "No changes in the image files, skipping commit."
      else
        git add pics/*.png
        git commit -m "Update README status with latest PR and issue count"
        git push https://x-access-token:${{ secrets.FINE_GRAINED_TOKEN }}@github.com/${{ github.repository }}.git
      fi